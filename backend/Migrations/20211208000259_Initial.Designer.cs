// <auto-generated />
using System;
using ISO810_ERP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ISO810_ERP.Migrations
{
    [DbContext(typeof(ErpDbContext))]
    [Migration("20211208000259_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ISO810_ERP.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ISO810_ERP.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dominican Peso",
                            ShortCode = "DOP",
                            Symbol = "RD$"
                        },
                        new
                        {
                            Id = 2,
                            Name = "US Dollar",
                            ShortCode = "USD",
                            Symbol = "$"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Euro",
                            ShortCode = "EUR",
                            Symbol = "€"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pound Sterling",
                            ShortCode = "GBP",
                            Symbol = "£"
                        });
                });

            modelBuilder.Entity("ISO810_ERP.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("ISO810_ERP.Models.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExpenseCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Customer Support"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Development / R&D"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ops"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Web Hosting"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Productivity"
                        });
                });

            modelBuilder.Entity("ISO810_ERP.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("ISO810_ERP.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("HomePage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HomePage = "https://www.mongodb.com/atlas",
                            Name = "MongoDB"
                        },
                        new
                        {
                            Id = 2,
                            HomePage = "https://monday.com/",
                            Name = "Monday"
                        },
                        new
                        {
                            Id = 3,
                            HomePage = "https://circleci.com/",
                            Name = "CircleCI"
                        },
                        new
                        {
                            Id = 4,
                            HomePage = "https://filestage.io/",
                            Name = "Filestage"
                        },
                        new
                        {
                            Id = 5,
                            HomePage = "https://www.hubspot.com/",
                            Name = "Hubspot"
                        },
                        new
                        {
                            Id = 6,
                            HomePage = "https://balsamiq.com/",
                            Name = "Balsamiq"
                        },
                        new
                        {
                            Id = 7,
                            HomePage = "https://www.adobe.com/",
                            Name = "Adobe"
                        },
                        new
                        {
                            Id = 8,
                            HomePage = "https://www.abstract.com/",
                            Name = "Abstract"
                        },
                        new
                        {
                            Id = 9,
                            HomePage = "https://www.algolia.com/",
                            Name = "Algolia"
                        },
                        new
                        {
                            Id = 10,
                            HomePage = "https://aws.amazon.com/",
                            Name = "AWS"
                        },
                        new
                        {
                            Id = 11,
                            HomePage = "https://www.hetzner.com/cloud",
                            Name = "Hetzner"
                        },
                        new
                        {
                            Id = 12,
                            HomePage = "https://cloud.google.com/",
                            Name = "Google Cloud"
                        },
                        new
                        {
                            Id = 13,
                            HomePage = "https://azure.microsoft.com/en-us/",
                            Name = "Azure"
                        },
                        new
                        {
                            Id = 14,
                            HomePage = "https://www.vultr.com/",
                            Name = "Vultr"
                        },
                        new
                        {
                            Id = 15,
                            HomePage = "https://www.paypal.com/",
                            Name = "PayPal"
                        },
                        new
                        {
                            Id = 16,
                            HomePage = "https://www.digitalocean.com/",
                            Name = "Digital Ocean"
                        },
                        new
                        {
                            Id = 17,
                            HomePage = "https://www.netcup.eu/",
                            Name = "Netcup"
                        },
                        new
                        {
                            Id = 18,
                            HomePage = "https://stripe.com/",
                            Name = "Stripe"
                        },
                        new
                        {
                            Id = 19,
                            HomePage = "https://squareup.com/",
                            Name = "Square"
                        },
                        new
                        {
                            Id = 20,
                            HomePage = "https://commerce.coinbase.com/",
                            Name = "Coinbase Commerce"
                        },
                        new
                        {
                            Id = 21,
                            HomePage = "https://www.linode.com/",
                            Name = "Linode"
                        },
                        new
                        {
                            Id = 22,
                            HomePage = "https://mailchimp.com/",
                            Name = "Mailchimp"
                        },
                        new
                        {
                            Id = 23,
                            HomePage = "https://www.azul.com.do/Pages/es/default.aspx",
                            Name = "Azul dominicana"
                        },
                        new
                        {
                            Id = 24,
                            HomePage = "https://www.cardnet.com.do/",
                            Name = "Cardnet dominicana"
                        },
                        new
                        {
                            Id = 25,
                            HomePage = "https://www.godaddy.com/",
                            Name = "Godaddy"
                        },
                        new
                        {
                            Id = 26,
                            HomePage = "https://github.com/",
                            Name = "Github"
                        },
                        new
                        {
                            Id = 27,
                            HomePage = "https://about.gitlab.com/",
                            Name = "Gitlab"
                        },
                        new
                        {
                            Id = 28,
                            HomePage = "https://vercel.com/",
                            Name = "Vercel"
                        },
                        new
                        {
                            Id = 29,
                            HomePage = "https://www.netlify.com/",
                            Name = "Netifly"
                        },
                        new
                        {
                            Id = 30,
                            HomePage = "https://www.cloudflare.com/",
                            Name = "Cloudflare"
                        },
                        new
                        {
                            Id = 31,
                            HomePage = "https://www.figma.com/",
                            Name = "Figma"
                        },
                        new
                        {
                            Id = 32,
                            HomePage = "https://business.facebook.com/",
                            Name = "Facebook Business"
                        },
                        new
                        {
                            Id = 33,
                            HomePage = "https://ads.google.com/home/",
                            Name = "Google Ads"
                        },
                        new
                        {
                            Id = 34,
                            HomePage = "https://www.intercom.com/",
                            Name = "Intercom"
                        });
                });

            modelBuilder.Entity("ISO810_ERP.Models.Expense", b =>
                {
                    b.HasOne("ISO810_ERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ISO810_ERP.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ISO810_ERP.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Organization");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("ISO810_ERP.Models.Organization", b =>
                {
                    b.HasOne("ISO810_ERP.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
