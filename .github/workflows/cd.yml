name: Deploy Docker Remote Server
on:
  push:
    branches: ["feature/ci-cd"]
jobs:
  # Publish the docker images to the registry
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      # Checkout to the repository
      - name: Checkout to repository
        uses: actions/checkout@v2
        
      # Access to docker hub
      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      # Build the .NET 6 Project
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 6.0.x
      - name: Restore the nuget packages
        run: dotnet restore ./backend
      - name: Publish the project
        run: dotnet publish -c Debug -o backend/bin/Publish/net6.0/Debug/ ./backend
          
      # Build the docker compose image
      - name: Build the docker image
        run: |
          export ERP_VERSION=${{ github.ref_name }}
          docker compose build

      # Push the docker image to the registry
      - name: Push the docker image to the registry
        run: docker compose push

      # Connect to the remote server
      - name: Connect to the remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}

      # Pull the docker compose image
      - name: Pull the docker image from the registry
        run: |
          cd /home/coding/unapec/iso810/erp/
          cd mkdir v${{ github.ref_name }}/
          cd v${{ github.ref_name }}/
          curl https://raw.githubusercontent.com/Neo-Ciber94/ISO810_ERP/main/docker-compose.yml > docker-compose.yml
          docker-compose pull

      # Create and .env file
      - name: Create .env file
        run: |
          touch .env
          echo "ISO810_ERP_DB_CONNECTION_STRING=${{ secrets.ISO810_ERP_DB_CONNECTION_STRING }}" >> .env
          echo "ISO810_JWT_SECRET=${{ secrets.ISO810_JWT_SECRET }}" >> .env

      # Stops and deletes all the containers and run the docker compose
      - name: Run the docker image
        run: |
          docker rm -f $(docker ps -a -q)
          docker rmi $(docker images -a -q)
          docker volume rm $(docker volume ls -q)
          docker-compose up -d --no-build --env-file=.env
